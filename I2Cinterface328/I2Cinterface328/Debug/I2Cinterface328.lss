
I2Cinterface328.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000013e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000ea  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000013e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000170  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000826  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006e9  00000000  00000000  00000a12  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002dc  00000000  00000000  000010fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  000013d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b7  00000000  00000000  0000143c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000b9  00000000  00000000  000017f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000018ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  78:	0c 94 73 00 	jmp	0xe6	; 0xe6 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <I2C_Start>:
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
}

void I2C_Stop()
{
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
  80:	84 ea       	ldi	r24, 0xA4	; 164
  82:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  86:	08 95       	ret

00000088 <I2C_Write>:
}


void I2C_Write(unsigned char data)
{
	TWDR = data;
  88:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1 << TWINT) | (1 << TWEN);
  8c:	ec eb       	ldi	r30, 0xBC	; 188
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	84 e8       	ldi	r24, 0x84	; 132
  92:	80 83       	st	Z, r24
	while ((TWCR & (1 << TWINT)) == 1);
  94:	80 81       	ld	r24, Z
  96:	08 95       	ret

00000098 <I2C_Init>:
}

void I2C_Init()
{
	TWSR = 0x02 ;
  98:	82 e0       	ldi	r24, 0x02	; 2
  9a:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = ((F_CPU/(F_SCL * 2)) - 8)/4;
  9e:	82 e1       	ldi	r24, 0x12	; 18
  a0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  a4:	08 95       	ret

000000a6 <main>:



int main(void)
{
	I2C_Init();
  a6:	0e 94 4c 00 	call	0x98	; 0x98 <I2C_Init>
	I2C_Start();
  aa:	0e 94 40 00 	call	0x80	; 0x80 <I2C_Start>
	I2C_Write(0b10010111);
  ae:	87 e9       	ldi	r24, 0x97	; 151
  b0:	0e 94 44 00 	call	0x88	; 0x88 <I2C_Write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b4:	81 ee       	ldi	r24, 0xE1	; 225
  b6:	94 e0       	ldi	r25, 0x04	; 4
  b8:	01 97       	sbiw	r24, 0x01	; 1
  ba:	f1 f7       	brne	.-4      	; 0xb8 <main+0x12>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x18>
  be:	00 00       	nop
	_delay_ms(5);
	I2C_Write(0b10010100);
  c0:	84 e9       	ldi	r24, 0x94	; 148
  c2:	0e 94 44 00 	call	0x88	; 0x88 <I2C_Write>
  c6:	81 ee       	ldi	r24, 0xE1	; 225
  c8:	94 e0       	ldi	r25, 0x04	; 4
  ca:	01 97       	sbiw	r24, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <main+0x24>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x2a>
  d0:	00 00       	nop
	_delay_ms(5);
	I2C_Write(0b10010101);
  d2:	85 e9       	ldi	r24, 0x95	; 149
  d4:	0e 94 44 00 	call	0x88	; 0x88 <I2C_Write>
  d8:	81 ee       	ldi	r24, 0xE1	; 225
  da:	94 e0       	ldi	r25, 0x04	; 4
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <main+0x36>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x3c>
  e2:	00 00       	nop
  e4:	ff cf       	rjmp	.-2      	; 0xe4 <main+0x3e>

000000e6 <_exit>:
  e6:	f8 94       	cli

000000e8 <__stop_program>:
  e8:	ff cf       	rjmp	.-2      	; 0xe8 <__stop_program>
